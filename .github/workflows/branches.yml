name: Branches CI

on:
  pull_request:
    branches:
      - "main"

concurrency:
  group: ${{github.workflow}}-${{github.ref}}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect files changes
    runs-on: ubuntu-latest
    timeout-minutes: 2
    outputs:
      db: ${{ steps.filter.outputs.db }}
      api: ${{ steps.filter.outputs.api }}
      web-app: ${{ steps.filter.outputs.web-app }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - uses: dorny/paths-filter@v3.0.2
        name: Running filter
        id: filter
        with:
          base: ${{ github.ref }}
          filters: |
            db:
              - 'packages/db/**'
            api:
              - 'apps/api/**'
            web-app:
              - 'apps/web-app/**'

  api:
    name: Run API steps
    needs: changes
    runs-on: ubuntu-latest
    if: ${{ needs.changes.outputs.api == 'true' || needs.changes.outputs.db == 'true' }}
    strategy:
      matrix:
        dirs: ['packages/db', 'apps/api']
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
      - name: Install dependencies
        run: bun install
      - name: Lint and format checks
        run: bun tooling:ci
        working-directory: ${{ matrix.dirs }}
      - name: Lint migrations
        run: echo "Lint migrations"
        working-directory: packages/db

  # web-app:
  #   name: Run web app steps
  #   needs: changes
  #   runs-on: ubuntu-latest
  #   if: ${{ needs.changes.outputs.web-app == 'true' }}
  #   defaults:
  #     run:
  #       working-directory: apps/web-app
  #   env:
  #     VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  #     VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v4
  #     - name: Setup Bun
  #       uses: oven-sh/setup-bun@v1
  #     - name: Install dependencies
  #       run: bun install
  #     - name: Install vercel
  #       run: bun install vercel
  #     - name: Lint and format checks
  #       run: bun tooling:ci


